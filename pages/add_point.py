import streamlit as st
import sqlite3
from datetime import datetime
from PIL import Image
import io

def add_point():
    st.markdown("""
        <h1 style='text-align: center; color: #2e7d32; margin-bottom: 30px;'>
            üìç –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–æ—á–∫–∏
        </h1>
    """, unsafe_allow_html=True)
    
    # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ñ–æ—Ä–º—ã
    with st.container():
        st.markdown("""
            <div style='background-color: #f5f5f5; padding: 20px; border-radius: 10px; margin-bottom: 20px;'>
                <h3 style='color: #1b5e20; margin-bottom: 15px;'>üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–∏</h3>
            </div>
        """, unsafe_allow_html=True)
        
        with st.form("add_point_form", clear_on_submit=True):
            col1, col2 = st.columns(2)
            
            with col1:
                st.markdown("""
                    <div style='background-color: white; padding: 15px; border-radius: 5px; margin-bottom: 15px;'>
                        <h4 style='color: #2e7d32;'>üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</h4>
                    </div>
                """, unsafe_allow_html=True)
                
                latitude = st.number_input("üåç –®–∏—Ä–æ—Ç–∞", value=48.0196, format="%.6f")
                longitude = st.number_input("üåç –î–æ–ª–≥–æ—Ç–∞", value=66.9237, format="%.6f")
                description = st.text_area("üìù –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã", 
                                         help="–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –∏ –µ–µ –º–∞—Å—à—Ç–∞–±")
                
            with col2:
                st.markdown("""
                    <div style='background-color: white; padding: 15px; border-radius: 5px; margin-bottom: 15px;'>
                        <h4 style='color: #2e7d32;'>‚ö†Ô∏è –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è</h4>
                    </div>
                """, unsafe_allow_html=True)
                
                pollution_level = st.select_slider(
                    "üéöÔ∏è –£—Ä–æ–≤–µ–Ω—å –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è",
                    options=["–ù–∏–∑–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–í—ã—Å–æ–∫–∏–π"],
                    value="–°—Ä–µ–¥–Ω–∏–π"
                )
                
                pollution_type = st.selectbox(
                    "üè≠ –¢–∏–ø –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è",
                    ["–ë—ã—Ç–æ–≤—ã–µ –æ—Ç—Ö–æ–¥—ã", "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–µ –æ—Ç—Ö–æ–¥—ã", "–•–∏–º–∏—á–µ—Å–∫–∏–µ –æ—Ç—Ö–æ–¥—ã"]
                )
                
                photo = st.file_uploader("üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ", type=['jpg', 'png'])
                if photo:
                    st.image(photo, caption="–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ñ–æ—Ç–æ", use_column_width=True)
                
                comments = st.text_area("üí≠ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏")
            
            submit = st.form_submit_button("‚úÖ –î–æ–±–∞–≤–∏—Ç—å —Ç–æ—á–∫—É", 
                                         use_container_width=True,
                                         type="primary")
            
            if submit:
                try:
                    conn = sqlite3.connect('eco_monitoring.db')
                    c = conn.cursor()
                    
                    photo_bytes = None
                    if photo:
                        photo_bytes = photo.read()
                    
                    c.execute('''
                        INSERT INTO pollution_points 
                        (latitude, longitude, description, pollution_level, status, 
                         pollution_type, created_at, photo, comments)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
                    ''', (latitude, longitude, description, pollution_level, '–û—Ç–∫—Ä—ã—Ç—ã–µ',
                          pollution_type, datetime.now(), photo_bytes, comments))
                    
                    conn.commit()
                    conn.close()
                    
                    st.success("üéâ –¢–æ—á–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                    st.balloons()
                except Exception as e:
                    st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ—á–∫–∏: {str(e)}")

if __name__ == "__main__":
    add_point()
