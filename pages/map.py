import streamlit as st
import folium
from streamlit_folium import folium_static
import sqlite3
import pandas as pd

def show_map():
    # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
    st.markdown("""
        <h1 style='text-align: center; color: #2e7d32; margin-bottom: 30px;'>
            üó∫Ô∏è –ö–∞—Ä—Ç–∞ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞
        </h1>
    """, unsafe_allow_html=True)
    
    # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
    with st.container():
        st.markdown("""
            <div style='background-color: #f5f5f5; padding: 20px; border-radius: 10px; margin-bottom: 20px;'>
                <h3 style='color: #1b5e20; margin-bottom: 15px;'>üîç –§–∏–ª—å—Ç—Ä—ã</h3>
            </div>
        """, unsafe_allow_html=True)
        
        col1, col2, col3 = st.columns(3)
        with col1:
            pollution_level = st.selectbox(
                "üéöÔ∏è –£—Ä–æ–≤–µ–Ω—å –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è",
                ["–í—Å–µ", "–ù–∏–∑–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–í—ã—Å–æ–∫–∏–π"],
                help="–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ—á–µ–∫"
            )
        with col2:
            status = st.selectbox(
                "üìä –°—Ç–∞—Ç—É—Å",
                ["–í—Å–µ", "–û—Ç–∫—Ä—ã—Ç—ã–µ", "–ó–∞–∫—Ä—ã—Ç—ã–µ"],
                help="–§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É –æ—á–∏—Å—Ç–∫–∏"
            )
        with col3:
            pollution_type = st.selectbox(
                "üè≠ –¢–∏–ø –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è",
                ["–í—Å–µ", "–ë—ã—Ç–æ–≤—ã–µ –æ—Ç—Ö–æ–¥—ã", "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–µ –æ—Ç—Ö–æ–¥—ã", "–•–∏–º–∏—á–µ—Å–∫–∏–µ –æ—Ç—Ö–æ–¥—ã"],
                help="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è"
            )
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Å—Ç–∏–ª–µ–º
    m = folium.Map(
        location=[48.0196, 66.9237],
        zoom_start=5,
        tiles='CartoDB positron'  # –ë–æ–ª–µ–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å –∫–∞—Ä—Ç—ã
    )
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ—á–µ–∫ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('eco_monitoring.db')
    query = "SELECT * FROM pollution_points"
    conditions = []
    params = []
    
    if pollution_level != "–í—Å–µ":
        conditions.append("pollution_level = ?")
        params.append(pollution_level)
    if status != "–í—Å–µ":
        conditions.append("status = ?")
        params.append(status)
    if pollution_type != "–í—Å–µ":
        conditions.append("pollution_type = ?")
        params.append(pollution_type)
    
    if conditions:
        query += " WHERE " + " AND ".join(conditions)
    
    points_df = pd.read_sql_query(query, conn, params=params)
    conn.close()
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ä–æ–≤ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Å—Ç–∏–ª–µ–º
    for idx, point in points_df.iterrows():
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –º–∞—Ä–∫–µ—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è
        color = {
            '–ù–∏–∑–∫–∏–π': 'green',
            '–°—Ä–µ–¥–Ω–∏–π': 'orange',
            '–í—ã—Å–æ–∫–∏–π': 'red'
        }.get(point['pollution_level'], 'gray')
        
        # HTML –¥–ª—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞
        popup_html = f"""
            <div style="width: 200px;">
                <h4 style="color: #2e7d32; margin-bottom: 10px;">–¢–æ—á–∫–∞ #{point['id']}</h4>
                <p><strong>üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</strong><br>{point['latitude']}, {point['longitude']}</p>
                <p><strong>‚ö†Ô∏è –£—Ä–æ–≤–µ–Ω—å:</strong><br>{point['pollution_level']}</p>
                <p><strong>üè≠ –¢–∏–ø:</strong><br>{point['pollution_type']}</p>
                <p><strong>üìù –û–ø–∏—Å–∞–Ω–∏–µ:</strong><br>{point['description']}</p>
                <p><strong>üìä –°—Ç–∞—Ç—É—Å:</strong><br>{point['status']}</p>
            </div>
        """
        
        folium.Marker(
            [point['latitude'], point['longitude']],
            popup=folium.Popup(popup_html, max_width=300),
            icon=folium.Icon(color=color, icon='info-sign'),
            tooltip=f"–¢–æ—á–∫–∞ #{point['id']}"
        ).add_to(m)
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª–µ–≥–µ–Ω–¥—ã
    legend_html = """
        <div style="position: fixed; bottom: 50px; right: 50px; z-index: 1000; background-color: white;
                    padding: 10px; border-radius: 5px; box-shadow: 0 0 10px rgba(0,0,0,0.1);">
            <h4 style="margin-bottom: 10px;">–õ–µ–≥–µ–Ω–¥–∞</h4>
            <p><i class="fa fa-circle" style="color: green;"></i> –ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å</p>
            <p><i class="fa fa-circle" style="color: orange;"></i> –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å</p>
            <p><i class="fa fa-circle" style="color: red;"></i> –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å</p>
        </div>
    """
    m.get_root().html.add_child(folium.Element(legend_html))
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã –≤ Streamlit —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –≤—ã—Å–æ—Ç–æ–π
    st.markdown("""
        <div style='background-color: white; padding: 10px; border-radius: 10px; box-shadow: 0 2px 5px rgba(0,0,0,0.1);'>
    """, unsafe_allow_html=True)
    folium_static(m, height=600)
    st.markdown("</div>", unsafe_allow_html=True)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–¥ –∫–∞—Ä—Ç–æ–π
    st.markdown("""
        <div style='background-color: #f5f5f5; padding: 20px; border-radius: 10px; margin-top: 20px;'>
            <h3 style='color: #1b5e20; margin-bottom: 15px;'>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
        </div>
    """, unsafe_allow_html=True)
    
    col1, col2, col3, col4 = st.columns(4)
    with col1:
        st.metric("–í—Å–µ–≥–æ —Ç–æ—á–µ–∫", len(points_df))
    with col2:
        st.metric("–û—Ç–∫—Ä—ã—Ç—ã—Ö", len(points_df[points_df['status'] == '–û—Ç–∫—Ä—ã—Ç—ã–µ']))
    with col3:
        st.metric("–ó–∞–∫—Ä—ã—Ç—ã—Ö", len(points_df[points_df['status'] == '–ó–∞–∫—Ä—ã—Ç—ã–µ']))
    with col4:
        high_pollution = len(points_df[points_df['pollution_level'] == '–í—ã—Å–æ–∫–∏–π'])
        st.metric("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö", high_pollution)

if __name__ == "__main__":
    show_map() 